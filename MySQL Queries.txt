#1  Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
SELECT 
  market 
FROM 
  dim_customer 
WHERE 
  customer = 'Atliq Exclusive' 
  AND region = 'APAC' 
GROUP BY 
  market;
#2  What is the percentage of unique product increase in 2021 vs. 2020?
SELECT 
  s1.unique_products_2020, 
  s2.unique_products_2021, 
  Round(
    (
      s2.unique_products_2021 - s1.unique_products_2020
    )* 100 / s1.unique_products_2020, 
    2
  ) AS percentage_chg 
FROM 
  (
    (
      SELECT 
        Count(
          DISTINCT(product_code)
        ) AS unique_products_2020 
      FROM 
        fact_sales_monthly 
      WHERE 
        fiscal_year = 2020
    ) AS s1, 
    (
      SELECT 
        count(
          DISTINCT(product_code)
        ) AS unique_products_2021 
      FROM 
        fact_sales_monthly 
      WHERE 
        fiscal_year = 2021
    ) AS s2
  );
#3  Provide a report with all the unique product counts for each segment and sort them in descending order of product counts.
select 
  segment, 
  COUNT(product) as product_count 
from 
  dim_product 
group by 
  segment 
order by 
  product_count desc;
#4  Follow-up: Which segment had the most increase in unique products in 2021 vs 2020?
with cte1 as (
  select 
    dp.segment, 
    COUNT(
      DISTINCT(product)
    ) as product_count_2020 
  from 
    dim_product as dp 
    JOIN fact_sales_monthly as sm ON dp.product_code = sm.product_code 
  group by 
    dp.segment, 
    sm.fiscal_year 
  having 
    sm.fiscal_year = 2020
), 
cte2 as (
  select 
    dp.segment, 
    COUNT(
      DISTINCT(product)
    ) as product_count_2021 
  from 
    dim_product as dp 
    JOIN fact_sales_monthly as sm ON dp.product_code = sm.product_code 
  group by 
    dp.segment, 
    sm.fiscal_year 
  having 
    sm.fiscal_year = 2021
) 
SELECT 
  cte1.segment, 
  cte1.product_count_2020, 
  cte2.product_count_2021, 
  (
    cte2.product_count_2021 - cte1.product_count_2020
  ) AS difference 
FROM 
  cte1, 
  cte2 
WHERE 
  cte1.segment = cte2.segment;
#5  Get the products that have the highest and lowest manufacturing costs.
(
  select 
    mc.product_code, 
    dp.product, 
    mc.manufacturing_cost 
  from 
    fact_manufacturing_cost as mc 
    join dim_product as dp on mc.product_code = dp.product_code 
  ORDER BY 
    mc.manufacturing_cost DESC 
  limit 
    1
) 
UNION 
  (
    select 
      mc.product_code, 
      dp.product, 
      mc.manufacturing_cost 
    from 
      fact_manufacturing_cost as mc 
      join dim_product as dp on mc.product_code = dp.product_code 
    ORDER BY 
      mc.manufacturing_cost ASC 
    limit 
      1
  );
#6  Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market.
select 
  pd.customer_code, 
  dc.customer, 
  pd.pre_invoice_discount_pct as average_discount_percentage 
from 
  fact_pre_invoice_deductions as pd 
  join dim_customer as dc on pd.customer_code = dc.customer_code 
WHERE 
  pre_invoice_discount_pct > (
    SELECT 
      AVG(pre_invoice_discount_pct) 
    FROM 
      fact_pre_invoice_deductions
  ) 
  AND dc.market = 'India' 
ORDER BY 
  average_discount_percentage DESC 
LIMIT 
  5;
#7  Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . This analysis helps to get an idea of low and
high - performing months 
and take strategic decisions.
select 
  CONCAT(
    MONTHNAME(sm.date), 
    ' (', 
    YEAR(sm.date), 
    ')'
  ) AS month, 
  sm.fiscal_year, 
  ROUND(
    SUM(
      sm.sold_quantity * gp.gross_price
    ), 
    2
  ) as gross_sales_amount 
from 
  fact_sales_monthly as sm 
  join fact_gross_price as gp on sm.product_code = gp.product_code 
  JOIN dim_customer c ON sm.customer_code = c.customer_code 
WHERE 
  c.customer = 'Atliq Exclusive' 
GROUP BY 
  month, 
  sm.fiscal_year 
ORDER BY 
  sm.fiscal_year 
LIMIT 
  5;
#8  In which quarter of 2020, got the maximum total_sold_quantity?
select 
  case when month(date) in (9, 10, 11) then 'Q1' when month(date) in (12, 1, 2) then 'Q2' when month(date) in (3, 4, 5) then 'Q3' when month(date) in (6, 7, 8) then 'Q4' END AS quarters, 
  ROUND(
    SUM(sold_quantity)/ 1000000, 
    2
  ) AS total_sold_quantity_in_mln 
FROM 
  fact_sales_monthly 
WHERE 
  fiscal_year = 2020 
GROUP BY 
  quarters 
ORDER BY 
  total_sold_quantity_in_mln DESC;
#9  Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?
with cte1 as (
  select 
    c.channel as channel, 
    ROUND(
      SUM(
        sm.sold_quantity * gp.gross_price
      )/ 1000000, 
      2
    ) as gross_sales_mln 
  from 
    fact_sales_monthly as sm 
    join fact_gross_price as gp on sm.product_code = gp.product_code 
    JOIN dim_customer c ON sm.customer_code = c.customer_code 
  WHERE 
    sm.fiscal_year = 2021 
  GROUP BY 
    c.channel 
  order by 
    gross_sales_mln desc 
  LIMIT 
    5
) 
select 
  channel, 
  gross_sales_mln, 
  ROUND(
    gross_sales_mln /(
      SUM(gross_sales_mln) OVER()
    )* 100, 
    2
  ) AS percentage 
FROM 
  cte1;
#10  Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?
WITH cte1 AS (
  SELECT 
    p.division, 
    s.product_code, 
    p.product, 
    SUM(s.sold_quantity) as total_sold_quantity 
  FROM 
    fact_sales_monthly s 
    JOIN dim_product P ON s.product_code = p.product_code 
  WHERE 
    s.fiscal_year = 2021 
  GROUP BY 
    s.product_code, 
    division, 
    P.product
), 
cte2 AS (
  SELECT 
    division, 
    product_code, 
    product, 
    total_sold_quantity, 
    RANK() OVER(
      PARTITION BY division 
      ORDER BY 
        total_sold_quantity DESC
    ) AS 'rank_order' 
  FROM 
    cte1
) 
SELECT 
  cte1.division, 
  cte1.product_code, 
  cte1.product, 
  cte2.total_sold_quantity, 
  cte2.rank_order 
FROM 
  cte1 
  JOIN cte2 ON cte1.product_code = cte2.product_code 
WHERE 
  cte2.rank_order IN (1, 2, 3);
